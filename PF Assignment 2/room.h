#pragma once

#include <vector>

#include "ivector2.h"

// large primes for generating seeds based on coordinates
#define PRIME_0 2600149679
#define PRIME_1 1880881
#define PRIME_2 3943267
#define PRIME_3 686408054863

using namespace std;

// read a sequence of characters and put the result in a databuffer, combining multibyte characters into single data elements. make sure your destination buffer is big enough!
void read_multichars_to_buffer(char*, uint32_t*, bool);

// get the seed deterministically based on the room position
inline unsigned int get_seed(ivector2 position) { return (position.x * PRIME_0) + (position.y * PRIME_2); }

// get the door toggles deterministically for a room, packed as 0b0000RLBT
unsigned char get_room_doors(ivector2, unsigned int);

// outer wall pattern of the rooms. some of these walls will be overwritten with
// doorways to allow the player to leave rooms
static const char* room_walls =
u8"                                             "
u8" ▟▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▙ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▜▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▛ "
u8"                                             ";

// tutorial room slides TODO
static const char* room_tutorial =
u8"                                             "
u8" ▟▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▙ "
u8" ▐                                         ▌ "
u8" ▐        ___    ___     ___    ___        ▌ "
u8" ▐       / __|  / _ \\   / _ \\  |   \\       ▌ "
u8" ▐      | (_ | | (_) | | (_) | | |) |      ▌ "
u8" ▐       \\___|  \\___/   \\___/  |___/       ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐                                         ▌ "
u8" ▐        _      _   _    ___   _  __      ▌ "
u8" ▐       | |    | | | |  / __| | |/ /      ▌ "
u8" ▐       | |__  | |_| | | (__  | ' <       ▌ "
u8" ▐       |____|  \\___/   \\___| |_|\\_\\      ▌ "
u8" ▐                                         ▌ "
u8" ▜▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▛ "
u8"                                             ";

// background for the gameover screen
static const char* room_gameover =
u8"█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█"
u8"░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░"
u8"░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░"
u8"░░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░"
u8"░░░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░░"
u8"░░░░░███████████████████████████████████░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
u8"░░░░░███████████████████████████████████░░░░░"
u8"░░░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░░"
u8"░░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░"
u8"░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░"
u8"░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░"
u8"█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█";

// the overall room size is 45x21
// below are different room layouts for some variety
#define NUM_ROOM_LAYOUTS 4
static const char* room_layouts[NUM_ROOM_LAYOUTS] =
{
	u8"                                             "
	u8"                                             "
	u8"          ▐                       ▌          "
	u8"          ▐                       ▌          "
	u8"          ▐                       ▌          "
	u8"          ▐                       ▌          "
	u8"  ▄▄▄▄▄▄▄▄▟                       ▙▄▄▄▄▄▄▄▄  "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"  ▀▀▀▀▀▀▀▀▜                       ▛▀▀▀▀▀▀▀▀  "
	u8"          ▐                       ▌          "
	u8"          ▐                       ▌          "
	u8"          ▐                       ▌          "
	u8"          ▐                       ▌          "
	u8"                                             "
	u8"                                             ",

	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"      ▛▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▜      "
	u8"      ▌                               ▐      "
	u8"      ▌                               ▐      "
	u8"      ▌                               ▐      "
	u8"      ▌                               ▐      "
	u8"      ▌                               ▐      "
	u8"      ▙▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▟      "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             ",
	
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"          ▛▀▀▀▀▀▀▜         ▛▀▀▀▀▀▀▜          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▌      ▐         ▌      ▐          "
	u8"          ▙▄▄▄▄▄▄▟         ▙▄▄▄▄▄▄▟          "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             "
	u8"                                             ",

	u8"                                             "
	u8"                                             "
	u8"                         ▌                   "
	u8"                         ▌                   "
	u8"                         ▌                   "
	u8"                         ▌   ▗▄▄▄▄▄▄▄▄▄▄▄▄▄  "
	u8"  ▀▀▀▀▀▀▀▀▀▜             ▌   ▐               "
	u8"           ▐             ▌   ▐               "
	u8"  ▄▄▄▄▄▄▄▄▄▟   ▛▀▀▀▜     ▌   ▐               "
	u8"               ▌   ▐     ▌   ▐               "
	u8"               ▌   ▐     ▌   ▐               "
	u8"               ▌   ▐     ▌   ▐               "
	u8"               ▌   ▐     ▙▄▄▄▟   ▛▀▀▀▀▀▀▀▀▀  "
	u8"               ▌   ▐             ▌           "
	u8"               ▌   ▐             ▙▄▄▄▄▄▄▄▄▄  "
	u8"  ▀▀▀▀▀▀▀▀▀▀▀▀▀▘   ▐                         "
	u8"                   ▐                         "
	u8"                   ▐                         "
	u8"                   ▐                         "
	u8"                                             "
	u8"                                             "
};

// masks determining where goop can grow in particular room layouts
// prevents goop from getting stuck behind/inside blocked off areas
// 1 represents a spawnable tile, 0 represents a non-spawnable tile
static const char* goop_gen_masks[NUM_ROOM_LAYOUTS] =
{
	u8"000000000000000000000000000000000000000000000"
	u8"000000000000000000000000000000000000000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000001111111111111111111111100000000000"
	u8"000000000000000000000000000000000000000000000"
	u8"000000000000000000000000000000000000000000000",

	u8"000000000000000000000000000000000000000000000"
	u8"000000000000000000000000000000000000000000000"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111000000000000000000000000000000000111100"
	u8"001111000000000000000000000000000000000111100"
	u8"001111000000000000000000000000000000000111100"
	u8"001111000000000000000000000000000000000111100"
	u8"001111000000000000000000000000000000000111100"
	u8"001111000000000000000000000000000000000111100"
	u8"001111000000000000000000000000000000000111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"000000000000000000000000000000000000000000000"
	u8"000000000000000000000000000000000000000000000",

	u8"000000000000000000000000000000000000000000000"
	u8"000000000000000000000000000000000000000000000"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111100000000111111111000000001111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"001111111111111111111111111111111111111111100"
	u8"000000000000000000000000000000000000000000000"
	u8"000000000000000000000000000000000000000000000",

	u8"000000000000000000000000000000000000000000000"
	u8"000000000000000000000000000000000000000000000"
	u8"001111111111111111111111100000000000000000000"
	u8"001111111111111111111111100000000000000000000"
	u8"001111111111111111111111100000000000000000000"
	u8"001111111111111111111111100000000000000000000"
	u8"000000000000111111111111100000111111111111100"
	u8"000000000000111111111111100000111111111111100"
	u8"000000000000111000001111100000111111111111100"
	u8"001111111111111000001111100000111111111111100"
	u8"001111111111111000001111100000111111111111100"
	u8"001111111111111000001111100000111111111111100"
	u8"001111111111111000001111100000111000000000000"
	u8"001111111111111000001111111111111000000000000"
	u8"001111111111111000001111111111111000000000000"
	u8"000000000000000000001111111111111111111111100"
	u8"000000000000000000001111111111111111111111100"
	u8"000000000000000000001111111111111111111111100"
	u8"000000000000000000001111111111111111111111100"
	u8"000000000000000000000000000000000000000000000"
	u8"000000000000000000000000000000000000000000000"
};

// frames for transitions between rooms, going towards covering the screen
// these can be simply displayed in reverse order again to transition back out
#define NUM_TRANSITIONS 4
static const char* transition_buffers[NUM_TRANSITIONS] =
{
	u8"█████████████████████████████████████████████"
	u8"██████████                         ██████████"
	u8"████████                             ████████"
	u8"██████                                 ██████"
	u8"████                                     ████"
	u8"███                                       ███"
	u8"██                                         ██"
	u8"█                                           █"
	u8"█                                           █"
	u8"█                                           █"
	u8"█                                           █"
	u8"█                                           █"
	u8"█                                           █"
	u8"█                                           █"
	u8"██                                         ██"
	u8"███                                       ███"
	u8"████                                     ████"
	u8"██████                                 ██████"
	u8"████████                             ████████"
	u8"██████████                         ██████████"
	u8"█████████████████████████████████████████████",

	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████                   █████████████"
	u8"██████████                         ██████████"
	u8"████████                             ████████"
	u8"██████                                 ██████"
	u8"█████                                   █████"
	u8"████                                     ████"
	u8"████                                     ████"
	u8"████                                     ████"
	u8"████                                     ████"
	u8"████                                     ████"
	u8"█████                                   █████"
	u8"██████                                 ██████"
	u8"████████                             ████████"
	u8"██████████                         ██████████"
	u8"█████████████                   █████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████",

	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"████████████████             ████████████████"
	u8"█████████████                   █████████████"
	u8"███████████                       ███████████"
	u8"██████████                         ██████████"
	u8"█████████                           █████████"
	u8"█████████                           █████████"
	u8"█████████                           █████████"
	u8"██████████                         ██████████"
	u8"███████████                       ███████████"
	u8"█████████████                   █████████████"
	u8"████████████████             ████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████",

	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
	u8"█████████████████████████████████████████████"
};